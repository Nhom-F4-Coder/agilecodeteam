/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ListMeNu;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.SanPham;
import model.khachhang;

/**
 *
 * @author DELL
 */
public class HoaDon extends javax.swing.JInternalFrame {

    Connection cnt;
    String hosting = "jdbc:sqlserver://localhost\\SQLEXPRESS:1433;databaseName=QUANLIBANHANGDB";
    String user = "sa";
    String pass = "123456";
    DefaultTableModel modelSanPham;
    DefaultTableModel modelHoaDon;
    DefaultTableModel modelkhachhang1;
//    DefaultTableModel khachhang2;
    int index1;
    int index2;
    ArrayList<khachhang> listkhachhang = new ArrayList<>();
    ArrayList<SanPham> listsanpham = new ArrayList<>();
    int soluong = 0;
    int indexhoadon = -1;
    int indexKhachHang = -1;

    public HoaDon() {
        initComponents();
        modelSanPham = (DefaultTableModel) tblsanpham.getModel();
        modelHoaDon = (DefaultTableModel) tblhoadon.getModel();
        modelkhachhang1 = (DefaultTableModel) tblkhachhang.getModel();
        modelHoaDon.setRowCount(0);
        rdocucheck.setSelected(true);
        rdocu();
        txtmahoadon.setEnabled(false);
        System.out.println("modelsize: " + modelHoaDon.getRowCount());
        try {
            connect();
            //JOptionPane.showMessageDialog(this, "kết nối thành công");
            filltotableSanPham();
            fillTblKhachHang();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "lỗi");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jSeparator1 = new javax.swing.JSeparator();
        jButton8 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtmahoadon = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMaKhachHangTimKiem = new javax.swing.JTextField();
        abc = new javax.swing.JLabel();
        rdocucheck = new javax.swing.JRadioButton();
        rdocheck = new javax.swing.JRadioButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblkhachhang = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txttongtien = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblhoadon = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblsanpham = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtmakhachhang = new javax.swing.JTextField();
        txtten = new javax.swing.JTextField();
        txtsdt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        rdonam = new javax.swing.JRadioButton();
        rdonu = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtdiachi = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setClosable(true);
        setTitle("Hóa Đơn");

        jButton8.setText("Xóa Sản Phẩm");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtmahoadon.setEditable(false);
        txtmahoadon.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Mã Hóa Đơn: ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Mã Khách Hàng: ");

        txtMaKhachHangTimKiem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtMaKhachHangTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMaKhachHangTimKiemKeyReleased(evt);
            }
        });

        buttonGroup1.add(rdocucheck);
        rdocucheck.setText("Cũ");
        rdocucheck.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdocucheckMouseClicked(evt);
            }
        });

        buttonGroup1.add(rdocheck);
        rdocheck.setText("Mới");
        rdocheck.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdocheckMouseClicked(evt);
            }
        });
        rdocheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdocheckActionPerformed(evt);
            }
        });
        rdocheck.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rdocheckKeyReleased(evt);
            }
        });

        tblkhachhang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã Khách hàng", "Tên"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblkhachhang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblkhachhangMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblkhachhang);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Đối Tượng Khách Hàng");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtmahoadon)
                                    .addComponent(txtMaKhachHangTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(abc)))
                        .addGap(0, 21, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(rdocheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rdocucheck)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtmahoadon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5))
                    .addComponent(txtMaKhachHangTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rdocheck)
                        .addComponent(rdocucheck)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(abc))
        );

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setText("Lưu Hóa Đơn");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton4.setText("Hủy");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setText("Tổng Tiền Cần Thanh Toán: ");

        txttongtien.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txttongtien.setText("0.0VND");

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton6.setText("Thêm Hóa Đơn");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        tblhoadon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã Sản Phẩm", "Tên Sản Phẩm", "Số Lượng", "Giá  (VND)", "Khuyến Mại  (%)", "Tổng Tiền (VND)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblhoadon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblhoadonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblhoadon);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Danh Sách Sản Phẩm Đã Chọn");

        tblsanpham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Sản Phẩm", "Tên Sản Phẩm", "Giá", "Khuyến Mại(%)", "Tình Trạng", "Cấu Hình", "Bảo Hành"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblsanpham.setToolTipText("");
        tblsanpham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblsanphamMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblsanpham);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Danh Sách Sản Phẩm Của Cửa Hàng");

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setText("Mã Khách Hàng");

        jLabel10.setText("Tên KH:");

        jLabel11.setText("SDT");

        buttonGroup2.add(rdonam);
        rdonam.setText("Nam");

        buttonGroup2.add(rdonu);
        rdonu.setText("Nữ");

        jLabel12.setText("Giới Tính:");

        txtdiachi.setColumns(20);
        txtdiachi.setRows(5);
        jScrollPane2.setViewportView(txtdiachi);

        jLabel13.setText("Địa Chỉ:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(207, 207, 207))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(rdonam)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rdonu)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtsdt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                                    .addComponent(txtten, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtmakhachhang, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtmakhachhang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtsdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdonam)
                    .addComponent(rdonu)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Xóa Trắng");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Sửa số lượng");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(94, 94, 94))))
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jButton8)
                        .addGap(26, 26, 26)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(29, 29, 29)
                        .addComponent(jButton6)
                        .addGap(33, 33, 33)
                        .addComponent(jButton3)
                        .addGap(29, 29, 29)
                        .addComponent(jButton4)
                        .addGap(12, 12, 12)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(txttongtien)
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jButton8)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txttongtien))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton6)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        clearform();
        txtmahoadon.setText("HD_" + randommahd());

        try {
            String sql = "select * from HOADON inner join HOADONCHITIET on HOADON.MAHOADON = HOADONCHITIET.MAHOADON";
            Statement stm = cnt.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while (rs.next()) {
                String ma = rs.getString(1);
                if (ma.equalsIgnoreCase(mahd)) {
                    txtmahoadon.setText("HD_" + randommahd());
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton6ActionPerformed
    int i = 1;
    int indexx;
    private void tblsanphamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblsanphamMouseClicked
        int index = tblsanpham.getSelectedRow();
        String sl = JOptionPane.showInputDialog(this, "nhap so luong");
        if (sl == null) {
            soluong = 0;
        } else {
            try {
                if (Integer.parseInt(sl) < 0) {
                    JOptionPane.showMessageDialog(this, "số lượng phải lớn hơn 0");
                    return;
                } else {
                    soluong = Integer.parseInt(sl);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "số lượng phải là số");
                return;
            }

        }

        String ma = (String) modelSanPham.getValueAt(index, 0);
        String ten = (String) modelSanPham.getValueAt(index, 1);
        int soluong = this.soluong;
        int khuyenmai = Integer.parseInt(modelSanPham.getValueAt(index, 3) + "");
        double gia = Double.parseDouble(modelSanPham.getValueAt(index, 2) + "");
        double tongtien = (soluong * (gia - ((gia * khuyenmai) / 100)));
        if (soluong > 0) {
            if (modelHoaDon.getRowCount() == 0) {
                modelHoaDon.addRow(new Object[]{ma, ten, soluong, gia, khuyenmai, tongtien});
                soluong = 0;
                System.out.println("mode 0");
            } else if (modelHoaDon.getRowCount() > 0) {
//                for (int i = 0; i < modelHoaDon.getRowCount(); i++) {
//                    if (modelHoaDon.getValueAt(i, 0).equals(ma)) {
//                        modelHoaDon.setValueAt(soluong + Double.parseDouble(modelHoaDon.getValueAt(i, 2) + ""), i, 2);
//                        int slg = Integer.parseInt(modelHoaDon.getValueAt(i, 2)+"");
//                        double giaup =Double.parseDouble(modelHoaDon.getValueAt(i, 3)+"");
//                        int kmup =Integer.parseInt(modelHoaDon.getValueAt(i, 4)+"");
//                        double tong= (slg * (giaup - ((giaup * kmup) / 100)));
//                        modelHoaDon.setValueAt(tong, i, 5);
//                        System.out.println("if");
//                        tinhTongTien();
//                        break;
//                    } else {
                modelHoaDon.addRow(new Object[]{ma, ten, soluong, gia, khuyenmai, tongtien});
                soluong = 0;
//                        System.out.println("else");
//                    }
//                }
                System.out.println("model != 0");
            }

        }
        System.out.println("gia " + gia);
        System.out.println("sl " + soluong);
        System.out.println("km " + khuyenmai);
        tinhTongTien();
    }//GEN-LAST:event_tblsanphamMouseClicked

    private void txtMaKhachHangTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaKhachHangTimKiemKeyReleased
         timkiem();

    }//GEN-LAST:event_txtMaKhachHangTimKiemKeyReleased

    private void rdocucheckMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdocucheckMouseClicked
        rdocu();
    }//GEN-LAST:event_rdocucheckMouseClicked

    private void rdocheckMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdocheckMouseClicked
        txtmakhachhang.setEnabled(true);
        txtdiachi.setEnabled(true);
        txtsdt.setEnabled(true);
        txtten.setEnabled(true);
        rdonam.setEnabled(true);
        rdonu.setEnabled(true);
        rdonam.setVisible(true);
        txtMaKhachHangTimKiem.setEnabled(false);
        tblkhachhang.setVisible(false);
        clearform();
    }//GEN-LAST:event_rdocheckMouseClicked

    private void rdocheckKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rdocheckKeyReleased
        // chage buttom mới
        //       if(){}

    }//GEN-LAST:event_rdocheckKeyReleased

    private void tblhoadonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblhoadonMouseClicked
        indexhoadon = tblhoadon.getSelectedRow();

    }//GEN-LAST:event_tblhoadonMouseClicked

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if (indexhoadon == -1) {
            JOptionPane.showMessageDialog(this, "chua chon san pham");
        } else {
            modelHoaDon.removeRow(indexhoadon);
            indexhoadon = -1;
            tinhTongTien();
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void tblkhachhangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblkhachhangMouseClicked
        indexKhachHang = tblkhachhang.getSelectedRow();
        if (indexKhachHang == -1) {
            JOptionPane.showMessageDialog(this, "chua chon khach hang");
        } else {
            showmformKhachHang(indexKhachHang);
        }
    }//GEN-LAST:event_tblkhachhangMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed
    String mahd = "";
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        if (rdocucheck.isSelected()) {
            if (check()) {
                save(txtmahoadon.getText());
                JOptionPane.showMessageDialog(this, "lưu hóa đơn thành công");
            }
        } else if (rdocheck.isSelected()) {
            if (check2()) {
                savenew(txtmahoadon.getText());
                JOptionPane.showMessageDialog(this, "lưu hóa đơn thành công");
            }
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void rdocheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdocheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdocheckActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        clearform();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int indexsoluong = tblhoadon.getSelectedRow();
//        System.out.println("so l "+indexsoluong);
        if (indexsoluong == -1) {
            JOptionPane.showMessageDialog(this, "chưa chọn sản phẩm cần sửa số lượng");
            return;
        } else {
            String sl = JOptionPane.showInputDialog(this, "nhập số lượng bạn muốn sửa");
            modelHoaDon.setValueAt(Integer.parseInt(sl), indexsoluong, 2);
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel abc;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton rdocheck;
    private javax.swing.JRadioButton rdocucheck;
    private javax.swing.JRadioButton rdonam;
    private javax.swing.JRadioButton rdonu;
    private javax.swing.JTable tblhoadon;
    private javax.swing.JTable tblkhachhang;
    private javax.swing.JTable tblsanpham;
    private javax.swing.JTextField txtMaKhachHangTimKiem;
    private javax.swing.JTextArea txtdiachi;
    private javax.swing.JTextField txtmahoadon;
    private javax.swing.JTextField txtmakhachhang;
    private javax.swing.JTextField txtsdt;
    private javax.swing.JTextField txtten;
    private javax.swing.JLabel txttongtien;
    // End of variables declaration//GEN-END:variables
    private void connect() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            cnt = DriverManager.getConnection(hosting, user, pass);
//            JOptionPane.showMessageDialog(this, "ok");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "lỗi kết nối");
        }
    }

    protected void filltotableSanPham() {
        modelSanPham.setRowCount(0);
        String sql = "select * from SANPHAM ";
        try {
            Statement stm = cnt.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while (rs.next()) {
                String ma = rs.getString("MASANPHAM");
                String ten = rs.getString("TENSANPHAM");
                double gia = Double.parseDouble(rs.getString("GIA"));
                String tinhtrang = rs.getString("TINHTRANG");
                int khuyenmai = Integer.parseInt(rs.getString("KHUYENMAI"));
                String cauhinh = rs.getString("CAUHINH");
                //String baohanh =rs.getString("BAOHANH");
                //model.addRow(new Object[]{ma,ten,gia,tinhtrang,khuyenmai,cauhinh,baohanh});
                Object[] row = new Object[]{ma, ten, gia, khuyenmai, tinhtrang, cauhinh, 0};
                modelSanPham.addRow(row);
            }
        } catch (Exception e) {
        }
    }

    private void fillTblKhachHang() {
        String sql = "select * from KHACHHANG";
        modelkhachhang1.setRowCount(0);
        try {
            Statement stm = cnt.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while (rs.next()) {
                String ma = rs.getString(1);
                String ten = rs.getString(2);
                String gioitinh = "";
                if (rs.getBoolean(3) == false) {
                    gioitinh = "nam";
                } else if (rs.getBoolean(3) == true) {
                    gioitinh = "nữ";
                }
//                System.out.println("gioi tinh" + gioitinh);
                String sdt = rs.getString(4);
                String diachi = rs.getString(5);
                khachhang ks = new khachhang(ma, ten, diachi, sdt, gioitinh);
                listkhachhang.add(ks);
                modelkhachhang1.addRow(new Object[]{ma, ten});
            }
            System.out.println("add khach hang ok ");
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("loi add khach hang");
        }
    }

    private void rdocu() {
        txtmakhachhang.setEnabled(false);
        txtdiachi.setEnabled(false);
        txtsdt.setEnabled(false);
        txtten.setEnabled(false);
        rdonam.setEnabled(false);
        rdonu.setEnabled(false);
        tblkhachhang.setVisible(true);
        txtMaKhachHangTimKiem.setEnabled(true);
    }

    private void showmformKhachHang(int indexKhachHang) {
        txtMaKhachHangTimKiem.setText(listkhachhang.get(indexKhachHang).getMakh());
        txtmakhachhang.setText(listkhachhang.get(indexKhachHang).getMakh());
        txtten.setText(listkhachhang.get(indexKhachHang).getHoten());
        txtsdt.setText(listkhachhang.get(indexKhachHang).getSdt());
        txtdiachi.setText(listkhachhang.get(indexKhachHang).getDiachi());
        if (listkhachhang.get(indexKhachHang).getGioitinh().equals("nam")) {
            rdonam.setSelected(true);
        }
        if (listkhachhang.get(indexKhachHang).getGioitinh().equals("nữ")) {
            rdonu.setSelected(true);
        }
//        System.out.println("gt: "+);
    }

    private void timkiem() {
        String sql = "select * from KHACHHANG where MAKHACHHANG like" + "'%" + txtMaKhachHangTimKiem.getText() + "%'";
        modelkhachhang1.setRowCount(0);
        try {
            Statement stm = cnt.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            String ma = "";
            String ten = "";
            String gioitinh = "";
            String sdt = "";
            String diachi = "";
            while (rs.next()) {
                ma = rs.getString(1);
                ten = rs.getString(2);

                if (rs.getBoolean(3) == false) {
                    gioitinh = "nam";
                } else if (rs.getBoolean(3) == true) {
                    gioitinh = "nữ";
                }
//                System.out.println("gioi tinh"+gioitinh);
                sdt = rs.getString(4);
                diachi = rs.getString(5);
//                khachhang ks = new khachhang(ma, ten, diachi, sdt, gioitinh);
//                listkhachhang.add(ks);
                modelkhachhang1.addRow(new Object[]{ma, ten});
            }
            if (modelkhachhang1.getRowCount() == 1) {
                txtmakhachhang.setText(ma);
                txtten.setText(ten);
                txtsdt.setText(sdt);
                txtdiachi.setText(diachi);
                if (gioitinh.equals("nam")) {
                    rdonam.setSelected(true);
                }
                if (gioitinh.equals("nữ")) {
                    rdonu.setSelected(true);
                }
            } else {
                txtmakhachhang.setText("");
                txtten.setText("");
                txtsdt.setText("");
                txtdiachi.setText("");
                rdonam.setSelected(false);
                rdonu.setSelected(false);
            }
//            System.out.println("add list khach hang ok ");
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("loi add list khach hang");
        }
//        
//        modelkhachhang1.setRowCount(0);
//        for(int i=0;i<listkhachhang.size();i++){
//            if(txtMaKhachHangTimKiem.getText().contains(listkhachhang.get(i).getMakh())){
//                modelkhachhang1.addRow(new Object[]{listkhachhang.get(i).getMakh(),listkhachhang.get(i).getHoten()});
//            }
//        }
    }
    double tongTien;

    private void tinhTongTien() {
        double tong = 0;
        for (int i = 0; i < modelHoaDon.getRowCount(); i++) {
            tong += (double) modelHoaDon.getValueAt(i, 5);
        }
        tongTien = +tong;
        txttongtien.setText(tong + "VND");
        System.out.println("tong tien " + tong);
    }

    private void save(String mahd) {
        String sql = "insert into HOADON values (?,?)";
        try {
            PreparedStatement pst = cnt.prepareStatement(sql);
            pst.setString(1, mahd);
            pst.setString(2, txtmakhachhang.getText());
            pst.execute();
            pst.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        String sql2 = "insert into HOADONCHITIET (MAHOADON,MASANPHAM,SOLUONG,NGAYMUAHANG,GIA,TONGTIEN) values (?,?,?,?,?,?)";
        SimpleDateFormat sdf = new SimpleDateFormat("dd-mm-yyyy");
        Date date = new Date();
        String datetime = sdf.format(date.getTime());
        System.out.println(datetime);
        for (int i = 0; i < modelHoaDon.getRowCount(); i++) {
            try {
                PreparedStatement pst = cnt.prepareStatement(sql2);
                pst.setString(1, mahd);
                pst.setString(2, modelHoaDon.getValueAt(i, 0) + "");
                pst.setInt(3, Integer.parseInt(modelHoaDon.getValueAt(i, 2) + ""));
                pst.setDate(4, new java.sql.Date(date.getTime()));
                pst.setDouble(5, Double.parseDouble(modelHoaDon.getValueAt(i, 3) + ""));
                pst.setDouble(6, Double.parseDouble(modelHoaDon.getValueAt(i, 5) + ""));
                pst.execute();
                pst.close();
            } catch (Exception e) {
                e.printStackTrace();
            }

        }

    }

    private void savenew(String mahd) {
        String sql0 = "insert into KHACHHANG (MAKHACHHANG,HOTENKHACHHANG,GIOITINH,SODIENTHOAI,DIACHI) values(?,?,?,?,?)";
        boolean gt = false;
        try {
            PreparedStatement pst = cnt.prepareStatement(sql0);
            pst.setString(1, txtmakhachhang.getText());
            pst.setString(2, txtten.getText());
            if (rdonam.isSelected()) {
                gt = false;
            }
            if (rdonu.isSelected()) {
                gt = true;
            }
            pst.setBoolean(3, gt);
            pst.setString(4, txtsdt.getText());
            pst.setString(5, txtdiachi.getText());
            pst.execute();
            pst.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        String sql = "insert into HOADON values (?,?)";
        try {
            PreparedStatement pst = cnt.prepareStatement(sql);
            pst.setString(1, mahd);
            pst.setString(2, txtmakhachhang.getText());
            pst.execute();
            pst.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        String sql2 = "insert into HOADONCHITIET (MAHOADON,MASANPHAM,SOLUONG,NGAYMUAHANG,GIA,TONGTIEN) values (?,?,?,?,?,?)";
        SimpleDateFormat sdf = new SimpleDateFormat("dd-mm-yyyy");
        Date date = new Date();
        String datetime = sdf.format(date.getTime());
        System.out.println(datetime);
        for (int i = 0; i < modelHoaDon.getRowCount(); i++) {
            try {
                PreparedStatement pst = cnt.prepareStatement(sql2);
                pst.setString(1, mahd);
                pst.setString(2, modelHoaDon.getValueAt(i, 0) + "");
                pst.setInt(3, Integer.parseInt(modelHoaDon.getValueAt(i, 2) + ""));
                pst.setDate(4, new java.sql.Date(date.getTime()));
                pst.setDouble(5, Double.parseDouble(modelHoaDon.getValueAt(i, 3) + ""));
                pst.setDouble(6, Double.parseDouble(modelHoaDon.getValueAt(i, 5) + ""));
                pst.execute();
                pst.close();
            } catch (Exception e) {
                e.printStackTrace();
            }

        }

    }

    private String randommahd() {
        String ma = "";
        int x = ((int) (Math.random() * 100000000 + 9999999));
        ma = x + "";
        return ma;
    }

    private boolean check() {
        if (txtmakhachhang.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "chua co ma khach hang");
            txtMaKhachHangTimKiem.requestFocus();
            return false;

        }
        if (txtmahoadon.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "chua co ma hoa don");
            txtmahoadon.requestFocus();
            return false;

        }
        try {
            String sql = "select * from HOADON inner join HOADONCHITIET on HOADON.MAHOADON = HOADONCHITIET.MAHOADON";
            Statement stm = cnt.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while (rs.next()) {
                String ma = rs.getString(1);
                if (ma.equalsIgnoreCase(txtmahoadon.getText())) {
                    JOptionPane.showMessageDialog(this, "mã hóa đơn này đã tồn tại");
                    txtmahoadon.requestFocus();
                    return false;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        if (modelHoaDon.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "chua chon san pham nao");
            return false;
        }
        return true;
    }

    private boolean check2() {

        if (txtmahoadon.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "chua co ma hoa don");
            txtmahoadon.requestFocus();
            return false;

        }
        try {
            String sql = "select * from HOADON inner join HOADONCHITIET on HOADON.MAHOADON = HOADONCHITIET.MAHOADON";
            Statement stm = cnt.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while (rs.next()) {
                String ma = rs.getString(1);
                if (ma.equalsIgnoreCase(txtmahoadon.getText())) {
                    JOptionPane.showMessageDialog(this, "mã hóa đơn này đã tồn tại");
                    txtmahoadon.requestFocus();
                    return false;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        //===
        if (txtmakhachhang.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "chua co ma khach hang");
            txtmakhachhang.requestFocus();
            return false;

        }
        if (txtten.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "chua co ten khach hang");
            txtten.requestFocus();
            return false;

        }
        if (txtsdt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "chua co sdt khach hang");
            txtsdt.requestFocus();
            return false;

        }
        if (txtdiachi.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "chua co dia chi khach hang");
            txtdiachi.requestFocus();
            return false;

        }

        if (modelHoaDon.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "chua chon san pham nao");
            return false;
        }

        return true;
    }

    private void clearform() {
        txtmahoadon.setText("");
        txtMaKhachHangTimKiem.setText("");
        txtdiachi.setText("");
        txtmakhachhang.setText("");
        txtsdt.setText("");
        txtten.setText("");
        txttongtien.setText("0.0VND");
        modelHoaDon.setRowCount(0);
    }

}
