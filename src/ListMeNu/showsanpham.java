/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ListMeNu;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import ListMeNu.Hoadonthanhtoan;
import model.SanPham;
import mdi_appqlbh.MainFrame;
/**
 *
 * @author DELL
 */
public class showsanpham extends javax.swing.JInternalFrame {

    Connection cnt;
    String hosting = "jdbc:sqlserver://localhost\\SQLEXPRESS:1433;databaseName=QUANLIBANHANGDB";
    String user = "sa";
    String pass = "123456";
    DefaultTableModel modelsanpham;
    int index;
    public int soluong;
    Hoadonthanhtoan hdtt = new Hoadonthanhtoan();
    public showsanpham() {
        initComponents();
        setLayer(1);
        setLocation(100, 100);
        modelsanpham = (DefaultTableModel) tblsanpham.getModel();
        try {
            connect();
            filltam();
            //JOptionPane.showMessageDialog(this, "kết nối thành công");
//            filltotable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "lỗi");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblsanpham = new javax.swing.JTable();

        setClosable(true);
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        tblsanpham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Sản Phẩm", "Tên Sản Phẩm", "Giá", "Khuyến Mại", "Tình Trạng", "Cấu Hình", "Bảo Hành"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblsanpham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblsanphamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblsanpham);

        getContentPane().add(jScrollPane1);

        getAccessibleContext().setAccessibleParent(tblsanpham);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    DefaultTableModel model;
    private void tblsanphamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblsanphamMouseClicked
        int index = tblsanpham.getSelectedRow();
//        model = (DefaultTableModel) hdtt.tblhoadon.getModel();
        soluong = Integer.parseInt(JOptionPane.showInputDialog(this, "nhap so luong"));
        System.out.println("so : "+soluong);
        String ma =(String) modelsanpham.getValueAt(index, 0);
        String ten = (String) modelsanpham.getValueAt(index, 1);
        int soluong =  this.soluong;
        int khuyenmai =Integer.parseInt(modelsanpham.getValueAt(index, 3)+"");
        double gia =Double.parseDouble( modelsanpham.getValueAt(index, 2)+"");
        double tongtien = (soluong * ((gia * khuyenmai)/100));
//        hdtt.model.addRow(new Object[]{ma,ten,soluong,gia,khuyenmai,tongtien});
        hdtt.model.addRow(new Object[]{"a1","a","a","a","a","a"});
        System.out.println("ddax add");
        hdtt.listsanpham.add( new SanPham(ma, ten, gia, khuyenmai));
        System.out.println("list" + hdtt.listsanpham);
        hdtt.model.setValueAt("update", 0, 1);
        System.out.println("model "+ modelsanpham.getValueAt(0, 0));
    }//GEN-LAST:event_tblsanphamMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable tblsanpham;
    // End of variables declaration//GEN-END:variables

    private void connect() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            cnt = DriverManager.getConnection(hosting, user, pass);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "lỗi kết nối");
        }
    }
    protected void filltotable(){
        String sql = "select * from SANPHAM";
        try {
            Statement stm = cnt.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while(rs.next()){
                String ma = rs.getString(hosting);
                String ten = rs.getString(hosting);
                String tinhtrang = rs.getString(hosting);
                String cauhinh = rs.getString(hosting);
                int baohang = rs.getInt(hosting);
                int khuyenmai = rs.getInt(hosting);
                double gia = rs.getDouble(hosting);
                SanPham sp = new SanPham(ma, ten, gia, khuyenmai);
                hdtt.listsanpham.add(sp);
                modelsanpham.addRow(new Object[]{ma,ten,gia,khuyenmai,tinhtrang,cauhinh,baohang});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }
    private void filltam(){
        modelsanpham.addRow(new Object[]{"a","a",100000,5,"ok","ok",1});
    }
}
